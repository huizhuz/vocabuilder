{"version":3,"sources":["components/Header/Navigation/Navigation.module.css","components/Header/Header.module.css","components/Footer/Footer.module.css","components/Content/ContentCard/ContentCard.module.css","components/Content/ContentList.module.css","components/PageNotFound/PageNotFound.module.css","App.module.css","components/Header/Navigation/Navigation.js","components/Header/Header.js","components/Footer/Footer.js","components/Content/ContentCard/ContentCard.js","components/Content/ContentList.js","containers/OnePhraseADay/OnePhraseADay.js","containers/VocabQuiz/VocabQuiz.js","containers/Contact/Contact.js","components/PageNotFound/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","styles","Link","to","Header","TitleWrapper","Footer","ContentCard","props","title","ContentList","map","key","OnePhraseADay","Component","VocabQuiz","Contact","PageNotFound","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,6B,mBCAvGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,+B,mBCAjED,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,IAAM,mB,4KCcTC,EAXI,WACf,OACI,yBAAKC,UAAWC,IAAOF,YACnB,kBAAC,IAAD,CAASC,UAAWC,IAAOC,KAAMC,GAAG,KAApC,QACA,kBAAC,IAAD,CAASH,UAAWC,IAAOC,KAAMC,GAAG,qBAApC,oBACA,kBAAC,IAAD,CAASH,UAAWC,IAAOC,KAAMC,GAAG,eAApC,cACA,kBAAC,IAAD,CAASH,UAAWC,IAAOC,KAAMC,GAAG,YAApC,a,iBCKGC,EAXA,WACX,OACI,yBAAKJ,UAAWC,IAAOG,QACnB,yBAAKJ,UAAWC,IAAOI,cACnB,4CAEJ,kBAAC,EAAD,Q,iBCKGC,EAZA,WACX,OACI,yBAAKN,UAAWC,IAAOK,QACnB,6BACI,mDACA,kE,iBCGDC,EARK,SAACC,GACjB,OACI,yBAAKR,UAAWC,IAAOM,aACnB,2BAAIC,EAAMC,S,iBCgBPC,EAlBK,WAMhB,OACI,yBAAKV,UAAWC,IAAOS,aACnB,gDAPO,CACX,mBACA,6BACA,uBAMeC,KAAI,SAAAF,GACP,OAAO,kBAAC,EAAD,CAAaA,MAAOA,EAAOG,IAAKH,S,sCCD5CI,EAVf,iLAEQ,OACI,yBAAKb,UAAWC,EAAOY,eACnB,+CAJhB,GAAmCC,aCSpBC,EAVf,iLAEQ,OACI,6BACI,8CAJhB,GAA+BD,aCUhBE,EAVf,iLAEQ,OACI,6BACI,uDAJhB,GAA6BF,a,iBCQdG,EARM,WACjB,OACI,yBAAKjB,UAAWC,IAAOgB,cACnB,gD,iBCyBGC,MAnBf,WACE,OACE,yBAAKlB,UAAWC,IAAOiB,KACrB,mJACA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWX,IACjC,kBAAC,IAAD,CAAOS,KAAK,oBAAoBC,OAAK,EAACC,UAAWR,IACjD,kBAAC,IAAD,CAAOM,KAAK,cAAcC,OAAK,EAACC,UAAWN,IAC3C,kBAAC,IAAD,CAAOI,KAAK,WAAWC,OAAK,EAACC,UAAWL,IACxC,kBAAC,IAAD,CAAOK,UAAWJ,MAGtB,kBAAC,EAAD,QCdcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e992cc6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__vl232\",\"Link\":\"Navigation_Link__1y8E4\",\"active\":\"Navigation_active__2Akmc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"TitleWrapper\":\"Header_TitleWrapper__1C6ST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__238hM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentCard\":\"ContentCard_ContentCard__3vJE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentList\":\"ContentList_ContentList__34u7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageNotFound\":\"PageNotFound_PageNotFound__2bYja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport styles from './Navigation.module.css'\n\nconst Navigation = () => {\n    return (\n        <div className={styles.Navigation}>\n            <NavLink className={styles.Link} to=\"/\">Home</NavLink>\n            <NavLink className={styles.Link} to=\"/one-phrase-a-day\">One Phrase A Day</NavLink>\n            <NavLink className={styles.Link} to=\"/vocab-quiz\">Vocab Quiz</NavLink>\n            <NavLink className={styles.Link} to=\"/contact\">Contact</NavLink>\n        </div>\n    );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport Navigation from './Navigation/Navigation'\nimport styles from './Header.module.css'\n\nconst Header = () => {\n    return (\n        <div className={styles.Header}>\n            <div className={styles.TitleWrapper}>\n                <h1>Vocabuilder</h1>\n            </div>\n            <Navigation></Navigation>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport styles from './Footer.module.css'\n\nconst Footer = () => {\n    return (\n        <div className={styles.Footer}>\n            <div>\n                <p>Created with ReactJS</p>\n                <p>&copy; Huizhu Zhang - October 2019</p>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport styles from './ContentCard.module.css'\n\nconst ContentCard = (props) => {\n    return (\n        <div className={styles.ContentCard}>\n            <p>{props.title}</p>\n        </div>\n    );\n}\n\nexport default ContentCard;\n","import React from 'react';\nimport ContentCard from './ContentCard/ContentCard';\nimport styles from './ContentList.module.css';\n\nconst ContentList = () => {\n    const titles = [\n        'One Phrase A Day',\n        'Test Your Vocab Knowledge!',\n        'Contact The Creator'\n    ];\n    return (\n        <div className={styles.ContentList}>\n            <p>Choose from below</p>\n            {\n                titles.map(title => {\n                    return <ContentCard title={title} key={title}></ContentCard>\n                })\n            }\n        </div>\n    );\n}\n\nexport default ContentList;\n","import React, { Component } from 'react';\nimport styles from './OnePhraseADay.js'\n\n\nexport class OnePhraseADay extends Component {\n    render() {\n        return (\n            <div className={styles.OnePhraseADay}>\n                <p>phrase page</p>\n            </div>\n        );\n    }\n}\n\nexport default OnePhraseADay;\n","import React, { Component } from 'react';\nimport styles from './VocabQuiz.js'\n\nexport class VocabQuiz extends Component {\n    render() {\n        return (\n            <div>\n                <p>Vocab quiz</p>\n            </div>\n        );\n    }\n}\n\nexport default VocabQuiz;\n","import React, { Component } from 'react';\nimport styles from './Contact.js'\n\nexport class Contact extends Component {\n    render() {\n        return (\n            <div>\n                <p>contact information</p>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n","import React from 'react';\nimport styles from './PageNotFound.module.css'\n\nconst PageNotFound = () => {\n    return (\n        <div className={styles.PageNotFound}>\n            <p>Page not found!</p>\n        </div>\n    );\n}\n\nexport default PageNotFound;\n","import React from 'react'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport Header from '../src/components/Header/Header'\nimport Footer from '../src/components/Footer/Footer'\nimport ContentList from '../src/components/Content/ContentList'\nimport OnePhraseADay from '../src/containers/OnePhraseADay/OnePhraseADay'\nimport VocabQuiz from '../src/containers/VocabQuiz/VocabQuiz'\nimport Contact from '../src/containers/Contact/Contact'\nimport PageNotFound from '../src/components/PageNotFound/PageNotFound'\nimport styles from './App.module.css'\n\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <style>@import url('https://fonts.googleapis.com/css?family=Amatic+SC:400,700|Julius+Sans+One|Quicksand&display=swap');</style>\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={ContentList} />\n          <Route path=\"/one-phrase-a-day\" exact component={OnePhraseADay} />\n          <Route path=\"/vocab-quiz\" exact component={VocabQuiz} />\n          <Route path=\"/contact\" exact component={Contact} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </BrowserRouter>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}